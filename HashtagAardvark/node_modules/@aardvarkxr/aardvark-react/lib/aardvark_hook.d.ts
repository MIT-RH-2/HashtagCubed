import { AvBaseNode, AvBaseNodeProps } from './aardvark_base_node';
import { EndpointAddr } from '@aardvarkxr/aardvark-shared';
/** The highlight states that a hook can be in. */
export declare enum HookHighlight {
    /** The hook is not highlighted. Usually hooks are
     * invisible in this state.
     */
    None = 0,
    /** There is a grab in progress. The hook should make
     * itself visible.
     */
    GrabInProgress = 1,
    /** The grab in progress is in range of this hook. */
    InRange = 2,
    /** The hook is occupied by a grabbable. */
    Occupied = 3
}
interface AvHookProps extends AvBaseNodeProps {
    /** The updateHighlight function will be called whenever the highlight state
     * of a hook changes.
     */
    updateHighlight?: (highlightType: HookHighlight, grabbableEpa: EndpointAddr) => void;
    /** If this field is true dropping grabbables on the hook will preserve the
     * transform between the grabbable and the hook at the time of the drop.
     *
     * @default false
     */
    preserveDropTransform?: boolean;
    /** If this field is true any number of grabbables can be dropped on the hook.
     *
     * @default false
     */
    allowMultipleDrops?: boolean;
    /** For spherical hooks, this is the radius of the hook. If any AABB
     * dimension is specified, this is ignore.
    */
    radius?: number;
    /** Minimum x value for axis-aligned bounding box hook volumes. */
    xMin?: number;
    /** Maximum x value for axis-aligned bounding box hook volumes. */
    xMax?: number;
    /** Minimum y value for axis-aligned bounding box hook volumes. */
    yMin?: number;
    /** Maximum y value for axis-aligned bounding box hook volumes. */
    yMax?: number;
    /** Minimum z value for axis-aligned bounding box hook volumes. */
    zMin?: number;
    /** Maximum z value for axis-aligned bounding box hook volumes. */
    zMax?: number;
    /** The amount to scale up the outer volume for this hook. Hooking
     * begins when the grabbable enters the inner volume and ends when it
     * exits the outer volume.
     *
     * @default 1.5
     */
    outerVolumeScale?: number;
}
/** This node is a point in space where a grabbable can be attached at
 * the end of a grab operation.
 */
export declare class AvHook extends AvBaseNode<AvHookProps, {}> {
    m_lastHighlight: HookHighlight;
    m_lastGrabbableInRange: EndpointAddr;
    m_lastGrabbable: EndpointAddr;
    buildNode(): import("@aardvarkxr/aardvark-shared").AvNode;
    private onGrabEvent;
}
export {};
//# sourceMappingURL=aardvark_hook.d.ts.map
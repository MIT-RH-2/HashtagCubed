import * as React from 'react';
import { HookHighlight } from './aardvark_hook';
import { EHand, EndpointAddr } from '@aardvarkxr/aardvark-shared';
interface StandardHookProps {
    /** The persistent name of this node when saving the user's state.
     * For AvHook and AvGrabbable nodes, this is required to associate persistent
     * state with the same hook or grabbable from run to run.
     */
    persistentName: string;
    /** The hand that this hook is parented to. This is used to determine whether or
     * not the hook should be visible based on that hand's edit mode.
     */
    hand?: EHand;
    /** The amount to scale up the outer volume for this hook. Hooking
     * begins when the grabbable enters the inner volume and ends when it
     * exits the outer volume.
     *
     * @default 1.5
     */
    outerVolumeScale?: number;
}
interface StandardHookState {
    highlight: HookHighlight;
    grabbableAddr: EndpointAddr;
}
/** A hook for attaching grabbables to that uses a standard plus-in-circle icon and is made visible
 * whenever its parent hand is in edit mode.
 */
export declare class AvStandardHook extends React.Component<StandardHookProps, StandardHookState> {
    private m_editModeHandle;
    constructor(props: any);
    updateHookHighlight(newHighlight: HookHighlight, grabbableAddr: EndpointAddr): void;
    renderModel(): JSX.Element;
    render(): JSX.Element;
}
interface StandardBoxHookProps extends StandardHookProps {
    /** Minimum x value for hook volume. */
    xMin: number;
    /** Maximum x value for hook volume. */
    xMax: number;
    /** Minimum y value for hook volume. */
    yMin: number;
    /** Maximum y value for hook volume. */
    yMax: number;
    /** Minimum z value for hook volume. */
    zMin: number;
    /** Maximum z value for hook volume. */
    zMax: number;
}
/** A hook for attaching grabbables to that uses a standard bounding box and is made visible
 * whenever its parent hand is in edit mode.
 */
export declare class AvStandardBoxHook extends React.Component<StandardBoxHookProps, StandardHookState> {
    private m_editModeHandle;
    constructor(props: any);
    updateHookHighlight(newHighlight: HookHighlight, grabbableAddr: EndpointAddr): void;
    renderModel(): JSX.Element;
    private renderLine;
    render(): JSX.Element;
}
export {};
//# sourceMappingURL=aardvark_standard_hook.d.ts.map
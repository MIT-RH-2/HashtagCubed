import * as React from 'react';
import { AvBaseNodeProps } from './aardvark_base_node';
import { HighlightType, GrabResponse } from './aardvark_grabbable';
import { AvGrabEvent } from '@aardvarkxr/aardvark-shared';
interface AvGadgetSeedProps extends AvBaseNodeProps {
    /** The URI of the gadget for which this node is a seed.
     * Gadget URIs are everything up to but not including the
     * "/gadget_manifest.json" part of the path.
    */
    uri: string;
    /** Size in meters of the gadget seed. This will control both
     * the active area and the scale of the gadget's model, at least
     * for gadget models that are centered around the origin.
     *
     * @default 0.1
     */
    radius?: number;
}
interface AvGadgetSeedState {
    grabbableHighlight: HighlightType;
}
/** A grabbable control that causes the grabber to grab a new
 * instance of a gadget instead of the control itself.
 */
export declare class AvGadgetSeed extends React.Component<AvGadgetSeedProps, AvGadgetSeedState> {
    private m_manifest;
    constructor(props: any);
    onGrabRequest(grabRequest: AvGrabEvent): Promise<GrabResponse>;
    onGadgetStarted(success: boolean, mainGrabbableId: string): void;
    onHighlightGrabbable(highlight: HighlightType): void;
    render(): JSX.Element;
}
export {};
//# sourceMappingURL=aardvark_gadget_seed.d.ts.map
import { AvConstraint, AvGrabEvent, EndpointAddr } from '@aardvarkxr/aardvark-shared';
import { AvBaseNode, AvBaseNodeProps } from './aardvark_base_node';
import { HighlightType } from './aardvark_grabbable';
interface AvBaseHandleProps extends AvBaseNodeProps {
    /** This callback is called when the handle's highlight state changes.
     * Implement it to provide per-handle highlighting. UpdateHighlight on
     * the containing AvGrabbable will also be called.
     */
    updateHighlight?: (highlightType: HighlightType) => void;
    /** The transform constraint on this handle.
     *
     * @default no constraint
     */
    constraint?: AvConstraint;
    /** If this property is true, the handle will enter the InRange highlight
     * type, but will never actually be grabbed.
     *
     * @default false
     */
    proximityOnly?: boolean;
}
export declare abstract class AvBaseHandle<TProps, TState> extends AvBaseNode<TProps, TState> {
    m_lastHighlight: HighlightType;
    protected get handleProps(): AvBaseHandleProps;
    protected buildBaseHandle(): import("@aardvarkxr/aardvark-shared").AvNode;
    protected onGrabEvent(evt: AvGrabEvent): void;
    grabInProgress(grabber: EndpointAddr): void;
}
interface AvSphereHandleProps extends AvBaseHandleProps {
    /** The radius of the sphere for this handle */
    radius: number;
}
/** This is spherical grabbable handle. It must be contained
 * inside an AvGrabbable node.
 */
export declare class AvSphereHandle extends AvBaseHandle<AvSphereHandleProps, {}> {
    buildNode(): import("@aardvarkxr/aardvark-shared").AvNode;
}
interface AvModelBoxHandleProps extends AvBaseHandleProps {
    /** The URI of the GLTF model to use to define the bounding box for this handle. */
    uri: string;
}
/** This is grabbable handle whose grab region is defined by the bounding box
 * of a model. It must be contained inside an AvGrabbable node.
 */
export declare class AvModelBoxHandle extends AvBaseHandle<AvModelBoxHandleProps, {}> {
    buildNode(): import("@aardvarkxr/aardvark-shared").AvNode;
}
export {};
//# sourceMappingURL=aardvark_handles.d.ts.map